---
# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.bootstrap.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-bootstrap
spec:
  replicas: {{ default .Values.defaults.replicaCount .Values.bootstrap.replicaCount | int64 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: bootstrap
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.bootstrap.httpPort }}"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Release.Name }}
        component: bootstrap
    spec:
      {{- with (default .Values.supermq.defaults.image.pullSecrets .Values.bootstrap.image.pullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - name: {{ .Release.Name }}-bootstrap
          image: "{{ default (printf "%s/bootstrap" .Values.defaults.image.rootRepository) .Values.bootstrap.image.repository }}:{{ default .Values.defaults.image.tag .Values.bootstrap.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.bootstrap.image.pullPolicy }}
          env:
            - name: SMQ_JAEGER_URL
              value: {{ .Values.supermq.jaeger.enabled | ternary (printf "http://%s-jaeger-collector:%d/v1/traces" .Release.Name (.Values.supermq.jaeger.collector.service.otlp.http.port | int )) .Values.supermq.jaeger.externalUrl }}
            - name: SMQ_JAEGER_TRACE_RATIO
              value: {{ default .Values.supermq.defaults.jaegerTraceRatio .Values.bootstrap.jaegerTraceRatio | quote }}
            - name: SMQ_SEND_TELEMETRY
              value: {{ default .Values.supermq.defaults.sendTelemetry .Values.bootstrap.sendTelemetry | quote }}
            - name: SMQ_ES_URL
              value: {{ .Values.supermq.nats.enabled | ternary (printf "nats://%s-nats:%d" .Release.Name (.Values.supermq.nats.config.nats.port | int )) .Values.supermq.nats.externalAddress }}
            - name: MG_BOOTSTRAP_LOG_LEVEL
              value: {{ default .Values.defaults.logLevel .Values.bootstrap.logLevel | quote }}
            - name: MG_BOOTSTRAP_HTTP_HOST
              value: "0.0.0.0"
            - name: MG_BOOTSTRAP_HTTP_PORT
              value: {{ .Values.bootstrap.httpPort | quote }}
            - name: SMQ_AUTH_GRPC_URL
              value: {{ .Release.Name }}-envoy:{{ .Values.supermq.auth.grpcPort }}
            - name: SMQ_AUTH_GRPC_TIMEOUT
              value: {{ .Values.supermq.auth.grpcTimeout | quote }}
            - name: SMQ_AUTH_GRPC_CLIENT_CERT
              value: {{ .Values.supermq.auth.grpcClientCert | quote }}
            - name: SMQ_AUTH_GRPC_CLIENT_KEY
              value: {{ .Values.supermq.auth.grpcClientKey | quote }}
            - name: SMQ_AUTH_GRPC_SERVER_CA_CERTS
              value: {{ .Values.supermq.auth.grpcServerCACerts | quote }}
            - name: SMQ_SPICEDB_PRE_SHARED_KEY
              value: {{ .Values.supermq.spicedb.grpc.presharedKey | quote }}
            - name: SMQ_SPICEDB_HOST
              value: {{ .Release.Name }}-spicedb-envoy
            - name: SMQ_SPICEDB_PORT
              value: {{ .Values.supermq.spicedb.grpc.port | quote }}
            - name: MG_BOOTSTRAP_ENCRYPT_KEY
              value: {{ .Values.bootstrap.encKey | quote }}
            - name: MG_BOOTSTRAP_EVENT_CONSUMER
              value: {{ .Values.bootstrap.eventConsumer | quote }}
            - name: MG_BOOTSTRAP_DB_HOST
            {{- if .Values.postgresqlbootstrap.enabled }}
              value: {{ .Release.Name }}-postgresqlbootstrap
            {{- else }}
              value: {{ .Values.postgresqlbootstrap.host | quote }}
            {{- end }}
            - name: MG_BOOTSTRAP_DB_PORT
              value: {{ .Values.postgresqlbootstrap.port | quote }}
            - name: MG_BOOTSTRAP_DB_USER
              value: {{ .Values.postgresqlbootstrap.username | quote }}
            - name: MG_BOOTSTRAP_DB_PASS
              value: {{ .Values.postgresqlbootstrap.password | quote }}
            - name: MG_BOOTSTRAP_DB_NAME
              value: {{ .Values.postgresqlbootstrap.database | quote }}
            - name: MG_BOOTSTRAP_HTTP_SERVER_CERT
              value: {{ .Values.bootstrap.httpServerCert | quote }}
            - name: MG_BOOTSTRAP_HTTP_SERVER_KEY
              value: {{ .Values.bootstrap.httpServerKey | quote }}
            - name: MG_BOOTSTRAP_DB_SSL_MODE
              value: {{ .Values.postgresqlbootstrap.sslMode | quote }}
            - name: MG_BOOTSTRAP_DB_SSL_CERT
              value: {{ .Values.postgresqlbootstrap.sslCert | quote }}
            - name: MG_BOOTSTRAP_DB_SSL_KEY
              value: {{ .Values.postgresqlbootstrap.sslKey | quote }}
            - name: MG_BOOTSTRAP_DB_SSL_ROOT_CERT
              value: {{ .Values.postgresqlbootstrap.sslRootCert | quote }}
            - name: MG_BOOTSTRAP_INSTANCE_ID
              value: {{ .Values.bootstrap.instanceId | quote }}
            - name: SMQ_DOMAINS_GRPC_URL
              value: {{ .Release.Name }}-envoy:{{ .Values.supermq.domains.grpcPort }}
            - name: SMQ_DOMAINS_GRPC_TIMEOUT
              value: {{ .Values.supermq.domains.grpcTimeout | quote }}
            - name: SMQ_DOMAINS_GRPC_CLIENT_CERT
              value: {{ .Values.supermq.domains.grpcClientCert | quote }}
            - name: SMQ_DOMAINS_GRPC_CLIENT_KEY
              value: {{ .Values.supermq.domains.grpcClientKey | quote }}
            - name: SMQ_DOMAINS_GRPC_SERVER_CA_CERTS
              value: {{ .Values.supermq.domains.grpcServerCACerts | quote }}
            - name: SMQ_CLIENTS_URL
              value: {{ .Release.Name }}-clients:{{ .Values.supermq.clients.httpPort }}
            - name: SMQ_CHANNELS_URL
              value: {{ .Release.Name }}-channels:{{ .Values.supermq.channels.httpPort }}
          ports:
            - containerPort: {{ .Values.bootstrap.httpPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.bootstrap.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.bootstrap.httpPort }}
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.bootstrap.httpPort }}
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
      {{- with .Values.bootstrap.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bootstrap.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bootstrap.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
